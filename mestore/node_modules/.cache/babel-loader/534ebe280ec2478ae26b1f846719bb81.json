{"ast":null,"code":"import Axios from \"axios\";\nexport const addData = amount => {\n  const arr = [];\n  Axios.get('http://localhost:3001/api/get').then(response => {\n    //console.log(response.data)\n    var data = response.data;\n    var i, d_0;\n\n    for (i = 0; i < data.length; i++) {\n      switch (data[i].Year) {\n        case '2008.03':\n          d_0 = d_0 + 1;\n          break;\n\n        default:\n          break;\n      }\n    }\n\n    console.log(d_0);\n    arr.push(d_0);\n  });\n  /*\r\n  for (let i = 0; i < amount; i++) {\r\n      // 100 is max, 50 is min\r\n      arr.push(Math.round(Math.random() * (100 - 50 + 1)) + 50);\r\n  }*/\n  //console.log(arr);\n\n  return arr;\n};","map":{"version":3,"sources":["C:/Users/Leo/Desktop/project/work/mestore/src/utils/ChartUtils.js"],"names":["Axios","addData","amount","arr","get","then","response","data","i","d_0","length","Year","console","log","push"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,OAAO,GAAIC,MAAD,IAAY;AAC/B,QAAMC,GAAG,GAAG,EAAZ;AAGIH,EAAAA,KAAK,CAACI,GAAN,CAAU,+BAAV,EAA2CC,IAA3C,CAAiDC,QAAD,IAAc;AAC1D;AAEJ,QAAIC,IAAI,GAAGD,QAAQ,CAACC,IAApB;AACA,QAAIC,CAAJ,EAAQC,GAAR;;AACA,SAAID,CAAC,GAAC,CAAN,EAASA,CAAC,GAAGD,IAAI,CAACG,MAAlB,EAA0BF,CAAC,EAA3B,EAA8B;AAC9B,cAAOD,IAAI,CAACC,CAAD,CAAJ,CAAQG,IAAf;AACI,aAAK,SAAL;AACIF,UAAAA,GAAG,GAAGA,GAAG,GAAG,CAAZ;AACJ;;AACA;AAAS;AAJb;AAOC;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAZ;AACAN,IAAAA,GAAG,CAACW,IAAJ,CAASL,GAAT;AACH,GAhBG;AAkBJ;AACJ;AACA;AACA;AACA;AACI;;AACA,SAAON,GAAP;AACH,CA7BM","sourcesContent":["\r\nimport Axios from \"axios\";\r\n\r\n\r\nexport const addData = (amount) => {\r\n    const arr = [];\r\n\r\n\r\n        Axios.get('http://localhost:3001/api/get').then((response) => {\r\n            //console.log(response.data)\r\n\r\n        var data = response.data;\r\n        var i , d_0;\r\n        for(i=0; i < data.length; i++){\r\n        switch(data[i].Year){\r\n            case '2008.03':\r\n                d_0 = d_0 + 1;\r\n            break;\r\n            default: break;\r\n\r\n        }\r\n        }\r\n        console.log(d_0);\r\n        arr.push(d_0);\r\n    });\r\n     \r\n    /*\r\n    for (let i = 0; i < amount; i++) {\r\n        // 100 is max, 50 is min\r\n        arr.push(Math.round(Math.random() * (100 - 50 + 1)) + 50);\r\n    }*/\r\n    //console.log(arr);\r\n    return arr;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}