{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leo\\\\Desktop\\\\project\\\\work\\\\mestore\\\\src\\\\store\\\\UiProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport UiContext from \"./ui-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultUiState = {\n  theme: \"light\"\n};\n\nconst uiReducer = (state, action) => {\n  if (action.type === \"TOGGLE\") {\n    let updatedTheme = state.theme === \"light\" ? \"dark\" : \"light\";\n    return {\n      theme: updatedTheme\n    };\n  }\n\n  return defaultUiState;\n};\n\nconst UiProvider = ({\n  children\n}) => {\n  _s();\n\n  const [uiState, dispatchUiAction] = useReducer(uiReducer, defaultUiState);\n\n  const toggleThemeHandler = () => {\n    dispatchUiAction({\n      type: \"TOGGLE\"\n    });\n  };\n\n  const uiContext = {\n    theme: uiState.theme,\n    toggleTheme: toggleThemeHandler\n  };\n  return /*#__PURE__*/_jsxDEV(UiContext.Provider, {\n    value: uiContext,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n};\n\n_s(UiProvider, \"sVz/x8ZEHtaYixsUKJF/pUejNyw=\");\n\n_c = UiProvider;\nexport default UiProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UiProvider\");","map":{"version":3,"sources":["C:/Users/Leo/Desktop/project/work/mestore/src/store/UiProvider.js"],"names":["useReducer","UiContext","defaultUiState","theme","uiReducer","state","action","type","updatedTheme","UiProvider","children","uiState","dispatchUiAction","toggleThemeHandler","uiContext","toggleTheme"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,KAAK,EAAE;AADY,CAAvB;;AAIA,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC1B,QAAIC,YAAY,GAAGH,KAAK,CAACF,KAAN,KAAgB,OAAhB,GAA0B,MAA1B,GAAmC,OAAtD;AACA,WAAO;AACHA,MAAAA,KAAK,EAAEK;AADJ,KAAP;AAGH;;AACD,SAAON,cAAP;AACH,CARD;;AAUA,MAAMO,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACjC,QAAM,CAACC,OAAD,EAAUC,gBAAV,IAA8BZ,UAAU,CAACI,SAAD,EAAYF,cAAZ,CAA9C;;AAEA,QAAMW,kBAAkB,GAAG,MAAM;AAC7BD,IAAAA,gBAAgB,CAAC;AAAEL,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAhB;AACH,GAFD;;AAIA,QAAMO,SAAS,GAAG;AACdX,IAAAA,KAAK,EAAEQ,OAAO,CAACR,KADD;AAEdY,IAAAA,WAAW,EAAEF;AAFC,GAAlB;AAKA,sBAAO,QAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAEC,SAA3B;AAAA,cAAuCJ;AAAvC;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAbD;;GAAMD,U;;KAAAA,U;AAeN,eAAeA,UAAf","sourcesContent":["import { useReducer } from \"react\";\r\n\r\nimport UiContext from \"./ui-context\";\r\n\r\nconst defaultUiState = {\r\n    theme: \"light\",\r\n};\r\n\r\nconst uiReducer = (state, action) => {\r\n    if (action.type === \"TOGGLE\") {\r\n        let updatedTheme = state.theme === \"light\" ? \"dark\" : \"light\";\r\n        return {\r\n            theme: updatedTheme,\r\n        };\r\n    }\r\n    return defaultUiState;\r\n};\r\n\r\nconst UiProvider = ({ children }) => {\r\n    const [uiState, dispatchUiAction] = useReducer(uiReducer, defaultUiState);\r\n\r\n    const toggleThemeHandler = () => {\r\n        dispatchUiAction({ type: \"TOGGLE\" });\r\n    };\r\n\r\n    const uiContext = {\r\n        theme: uiState.theme,\r\n        toggleTheme: toggleThemeHandler,\r\n    };\r\n\r\n    return <UiContext.Provider value={uiContext}>{children}</UiContext.Provider>;\r\n};\r\n\r\nexport default UiProvider;\r\n"]},"metadata":{},"sourceType":"module"}