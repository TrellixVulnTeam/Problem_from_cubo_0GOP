{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leo\\\\Desktop\\\\project\\\\work\\\\mestore\\\\src\\\\components\\\\Dashboard\\\\Earnings\\\\ChartContainer\\\\ChartContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef } from \"react\";\nimport { addData } from \"../../../../utils/ChartUtils\";\nimport { Chart, registerables } from \"chart.js\";\nimport UiContext from \"../../../../store/ui-context\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables); //nota intente crear un enlace para que insertara los años\n\nfunction Data() {\n  var arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  Axios.get('http://localhost:3001/api/get').then(response => {\n    //console.log(response.data)\n    var data = response.data;\n    var i;\n\n    for (i = 0; i < data.length; i++) {\n      switch (data[i].Year) {\n        case '2008.03':\n          arr[0] = arr[0] + 1;\n          break;\n\n        case '2009.03':\n          arr[1] = arr[1] + 1;\n          break;\n\n        case '2010.03':\n          arr[2] = arr[2] + 1;\n          break;\n\n        case '2011.03':\n          arr[3] = arr[3] + 1;\n          break;\n\n        case '2012.03':\n          arr[4] = arr[4] + 1;\n          break;\n\n        case '2013.03':\n          arr[5] = arr[5] + 1;\n          break;\n\n        case '2014.03':\n          arr[6] = arr[6] + 1;\n          break;\n\n        case '2015.03':\n          arr[7] = arr[7] + 1;\n          break;\n\n        case '2016.03':\n          arr[8] = arr[8] + 1;\n          break;\n\n        case '2017.03':\n          arr[9] = arr[9] + 1;\n          break;\n\n        default:\n          break;\n      }\n\n      console.log(arr);\n      return arr;\n    } //console.log(arr);\n\n  });\n}\n\n_c = Data;\nconst labels = [\"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\"];\nconst data = {\n  labels: labels,\n  datasets: [{\n    label: \"Sales\",\n    backgroundColor: \"rgba(51, 200, 99, .1)\",\n    fill: true,\n    borderColor: \"#33c863\",\n    data: Data(),\n    tension: 0.2\n  }\n  /*{\r\n      label: \"Profit\",\r\n      backgroundColor: \"rgba(242, 153, 74, .1)\",\r\n      fill: true,\r\n      borderColor: \"#f2994a\",\r\n      data: addData(12),\r\n      tension: 0.2,\r\n  },*/\n  ]\n};\n\nconst ChartContainer = () => {\n  _s();\n\n  const uiCtx = useContext(UiContext);\n  const chartRef = useRef();\n  useEffect(() => {\n    const canvasId = document.getElementById(\"myCanvas\");\n    chartRef.current = new Chart(canvasId, {\n      type: \"line\",\n      data,\n      options: {\n        maintainAspectRatio: false,\n        interaction: {\n          mode: \"index\",\n          intersect: false,\n          axis: \"x\"\n        },\n        plugins: {\n          tooltip: {\n            enabled: true\n          },\n          legend: false\n        },\n        scales: {\n          y: {\n            display: false\n          },\n          x: {\n            grid: {\n              drawBorder: false,\n              borderDash: [6],\n              color: uiCtx.theme === \"light\" ? \"#dddfe5\" : \"#26323f\",\n              border: false\n            },\n            ticks: {\n              color: uiCtx.theme === \"light\" ? \"#929292\" : \"#fff\",\n              font: {\n                family: \"'Mulish', sans-serif\",\n                size: \"16px\"\n              }\n            }\n          }\n        }\n      }\n    });\n    return () => chartRef.current.destroy();\n  }, [uiCtx.theme]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"myCanvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ChartContainer, \"7G6Nxd+dXQpG5Pk3RgRUBcHY/LU=\");\n\n_c2 = ChartContainer;\nexport default ChartContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Data\");\n$RefreshReg$(_c2, \"ChartContainer\");","map":{"version":3,"sources":["C:/Users/Leo/Desktop/project/work/mestore/src/components/Dashboard/Earnings/ChartContainer/ChartContainer.js"],"names":["React","useContext","useEffect","useRef","addData","Chart","registerables","UiContext","Axios","register","Data","arr","get","then","response","data","i","length","Year","console","log","labels","datasets","label","backgroundColor","fill","borderColor","tension","ChartContainer","uiCtx","chartRef","canvasId","document","getElementById","current","type","options","maintainAspectRatio","interaction","mode","intersect","axis","plugins","tooltip","enabled","legend","scales","y","display","x","grid","drawBorder","borderDash","color","theme","border","ticks","font","family","size","destroy"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef } from \"react\";\r\n\r\nimport { addData } from \"../../../../utils/ChartUtils\";\r\n\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport UiContext from \"../../../../store/ui-context\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nChart.register(...registerables);\r\n//nota intente crear un enlace para que insertara los años\r\nfunction Data(){\r\n    var arr = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\r\n \r\n        Axios.get('http://localhost:3001/api/get').then((response) => {\r\n            //console.log(response.data)\r\n        var data = response.data;\r\n        var i ;\r\n        for(i=0; i < data.length; i++){\r\n        switch(data[i].Year){\r\n            case '2008.03':\r\n                arr[0] = arr[0] + 1;\r\n            break;\r\n            case '2009.03':\r\n                arr[1] = arr[1] + 1;\r\n            break;\r\n            case '2010.03':\r\n                arr[2] = arr[2] + 1;\r\n            break;\r\n            case '2011.03':\r\n                arr[3] = arr[3] + 1;\r\n            break;\r\n            case '2012.03':\r\n                arr[4] = arr[4] + 1;\r\n            break;\r\n            case '2013.03':\r\n                arr[5] = arr[5] + 1;\r\n            break;\r\n            case '2014.03':\r\n                arr[6] = arr[6] + 1;\r\n            break;\r\n            case '2015.03':\r\n                arr[7] = arr[7] + 1;\r\n            break;\r\n            case '2016.03':\r\n                arr[8] = arr[8] + 1;\r\n            break;\r\n            case '2017.03':\r\n                arr[9] = arr[9] + 1;\r\n            break;\r\n            default: break;\r\n            \r\n        }\r\n        console.log(arr)\r\n    \r\n            return arr;\r\n    }\r\n    \r\n    //console.log(arr);\r\n    });\r\n    \r\n}\r\n\r\nconst labels = [\"2008\", \"2009\", \"2010\", \"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\"];\r\nconst data = {\r\n    labels: labels,\r\n    datasets: [\r\n        {\r\n            label: \"Sales\",\r\n            backgroundColor: \"rgba(51, 200, 99, .1)\",\r\n            fill: true,\r\n            borderColor: \"#33c863\",\r\n            data: Data(),\r\n            tension: 0.2,\r\n        },\r\n        /*{\r\n            label: \"Profit\",\r\n            backgroundColor: \"rgba(242, 153, 74, .1)\",\r\n            fill: true,\r\n            borderColor: \"#f2994a\",\r\n            data: addData(12),\r\n            tension: 0.2,\r\n        },*/\r\n    ],\r\n};\r\n\r\nconst ChartContainer = () => {\r\n    const uiCtx = useContext(UiContext);\r\n    const chartRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const canvasId = document.getElementById(\"myCanvas\");\r\n        chartRef.current = new Chart(canvasId, {\r\n            type: \"line\",\r\n            data,\r\n            options: {\r\n                maintainAspectRatio: false,\r\n                interaction: {\r\n                    mode: \"index\",\r\n                    intersect: false,\r\n                    axis: \"x\",\r\n                },\r\n                plugins: {\r\n                    tooltip: {\r\n                        enabled: true,\r\n                    },\r\n                    legend: false,\r\n                },\r\n                scales: {\r\n                    y: {\r\n                        display: false,\r\n                    },\r\n                    x: {\r\n                        grid: {\r\n                            drawBorder: false,\r\n                            borderDash: [6],\r\n                            color: uiCtx.theme === \"light\" ? \"#dddfe5\" : \"#26323f\",\r\n                            border: false,\r\n                        },\r\n                        ticks: {\r\n                            color: uiCtx.theme === \"light\" ? \"#929292\" : \"#fff\",\r\n                            font: {\r\n                                family: \"'Mulish', sans-serif\",\r\n                                size: \"16px\",\r\n                            },\r\n                        },\r\n                    },\r\n                },\r\n            },\r\n        });\r\n\r\n        return () => chartRef.current.destroy();\r\n    }, [uiCtx.theme]);\r\n\r\n    return <canvas id=\"myCanvas\"></canvas>;\r\n};\r\n\r\nexport default ChartContainer;\r\n"]},"metadata":{},"sourceType":"module"}